name: 'Strapi Deployment with Terraform'

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: madhu  # Specify the branch to checkout

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Extract Instance IP
      id: output
      run: echo "::set-output name=instance_ip::$(terraform output -raw instance_ip)"

  deploy:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: madhu  # Specify the branch to checkout

    - name: Deploy Strapi Application
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        INSTANCE_IP: ${{ needs.terraform.outputs.instance_ip }}
      run: |
        ssh -o StrictHostKeyChecking=no -i /path/to/your/TASK2.pem ubuntu@${{ env.INSTANCE_IP }} "rm -rf /srv/strapi/*"
        scp -o StrictHostKeyChecking=no -i /path/to/your/TASK2.pem -r . ubuntu@${{ env.INSTANCE_IP }}:/srv/strapi
        ssh -o StrictHostKeyChecking=no -i /path/to/your/TASK2.pem ubuntu@${{ env.INSTANCE_IP }} "cd /srv/strapi && yarn install && pm2 restart strapi"

